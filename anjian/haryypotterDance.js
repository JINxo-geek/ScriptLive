/* 开辟两个数组,一个数组放入时间轴中的时间点,然后进行循环相减 */

var timeline = [
  0, 202, 488, 506, 973, 1495, 1498, 1938, 2172, 2400, 2436, 2883, 3403, 3420, 3930 ,4150, 4389, 4446, 4880, 5351, 5353, 6000, 6220, 6502,
  7000, 7001, 7479, 7906, 7908, 8207, 8227, 8639, 8647, 8889, 8896, 9392, 9402, 9907, 9915, 10403, 10650, 10850, 11120, 11390,
  11884, 11894, 12118, 12129, 12662, 12668, 12876, 12881, 13372, 13396, 13916, 14354, 14574, 14759, 15068, 15332, 15421, 15852, 16552,
  16860, 17181, 17274, 17425, 17649, 17898, 18238, 18841, 19061, 19317, 19885, 19887, 20353, 20355, 20803, 21000, 21239, 21396, 21656, 21759, 21760,
  22336, 22342, 22629, 22803, 23158, 23809, 24212, 24306, 24792, 25219, 25334, 25570, 25804, 26229, 26293, 26781, 27189,27296,27528,27703, 28311, 28760, 29400,
  29750, 30401, 30771, 31537, 31773, 31734, 31950, 31965, 32717, 32719, 32855, 32860, 34014, 34222, 34475, 34667, 34850, 35104,
  35350, 35451, 35950, 36488, 36746, 36850, 36887, 37160, 37317, 37405, 37950, 38150, 38400, 38650,38850,39000 , 39200 ,39400 ,40000, 40383, 40433,40662, 40863,40873,
  41006, 41015, 41228, 41238, 41517, 41733, 42014, 42508, 42729, 42987, 43498, 43701, 44067, 44528,
  44577, 44960, 45465, 45582, 45983, 45980, 46464, 46772, 47045, 47620, 47834, 47988, 47984, 48190, 48184, 48405, 48720, 48895, 49237, 49409, 50020, 50019, 50957, 50951, 51134, 51127, 51447, 51440,
  51925, 51926, 52358, 52358, 52873, 52913, 53298, 53328, 53880, 53883, 54271, 54253, 54805, 54903, 55331, 55323, 55880, 56121, 56352, 56864, 57049, 57097, 57379, 57514, 57662, 57812, 58059, 58207, 58848, 59829, 60084, 60347, 60871, 60863, 61592, 61593, 61821, 62832
];
var delayarr = [];
for(let i=0;i<timeline.length-1;i++){
console.log(`第${i+2}到${i+1}点的延迟`,timeline[i+1],timeline[i],(timeline[i+1]-timeline[i]).toFixed(2));
  if (timeline[i] == timeline[i + 1]) { delayarr.push(0);delayarr.push(0) }
  else {
    delayarr.push(0);
    delayarr.push((timeline[i+1]-timeline[i]));
  }
  //这里需要判断下是否是同时按键的,同时按的不需要10延迟.或者全部都无延迟

}
var total = delayarr.reduce((a, b) => a + b);
console.log('总时长为:', timeline[timeline.length-1]-timeline[0], `\n总延迟为`, total,'ms','temeline长度',timeline.length);
/* 拼接按键精灵脚本
KeyDown "Space", 1
Delay 50
KeyUp "Space", 1
Delay 250
循环delayarr,然后奇偶分开拼接
*/
var geniestr = ''
for (let j = 0; j < delayarr.length; j=j+2) {
  geniestr += `KeyDown "Space",1\nDelay ${delayarr[j]} \n`;
  geniestr += `KeyUp "space",1\nDelay ${delayarr[j + 1]} \n`;
}
console.log(`Sub foundpic()\n`+geniestr+`KeyDown "Space",1\nDelay 0\nKeyUp "space",1`+`\nEnd Sub

For i=0 To 1000

FindColor 395,800,512,936,"808080",intX,intY
If intX > 0 And intY > 0 Then 
MoveTo intX, intY
Delay 10210
Call foundpic()
	Exit For
End If

Next`);

//关于点时机纠正,当一个时间点要前置或者后移时,是上一个点到这个点的延迟改变,对之后的所有点时机都会产生移动,但是改变输入的
//按键精灵启动有延迟,需要提前启动.测试过一次大概140ms延迟
//第四到第5点之间，理论467ms延迟，时间
//还存在问题，按键精灵代码执行是否存在延迟，去调查一下看看延迟是否对应的上 .  查明了，使用passmark keyboardTest测试出按下按键时需要时间的，而这个时间10ms左右（5ms~16ms),这个延迟会加入到键与键之间，导致比实际延迟更大，延迟时间轴边长
//Delay 10210为函数启动的目前时间
//暂时定下通用改法,优秀变动100,良变动250